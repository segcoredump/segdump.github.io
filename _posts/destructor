析构函数：
	析构函数用来自动回收或释放资源。
	
	何时调用析构函数：
		撤销类对象时自动调用析构函数。
		
		变量在超出作用域时自动撤销。
		
		当对象的引用或指针超出作用域时，不会运行析构函数。只有删除指向动态分配对象的指针或实际	
		对象（不是对象的引用）超出作用域时，才会运行析构函数。
	
		撤销一个容器时，也会运行容器中的类类型元素的析构函数，容器中的元素总是按逆序撤销。
		
	何时编写显式析构函数
		如果类需要析构函数，则它也需要赋值操作符和复制构造函数，这是一个有用的经验法则。这个规
		则常称为三法则，指的是如果需要析构函数，则需要所有这三个复制控制成员。
		
	合成析构函数：
		合成析构函数按对象创建时的逆序撤销每个非static成员。对于类类型的每个成员，合成析构
		函数调用该成员的析构函数来撤销对象。
		
		合成析构函数不删除指针成员所指向的对象。
		
		分配了资源的类一般需要定义析构函数以释放资源。
		析构函数是个成员函数，名字为在类名字之前加上一个代字号(~)，没有返回值，没有形参。
		由于不能指定任何形参，不能重载析构函数。
		
		析构函数与复制构造函数或复制操作符之间的一个重要区别是，即使我们编写了自己的析构函
		数，合成析构函数仍然运行。
		
		
		
		
虚析构函数：
	
	自动调用基类部分的析构函数对基类的设计有重要影响。
	
	删除指向动态分配对象的指针时，需要运行析构函数在释放对象的内存之前清除对象。处理继承层
	次中的对象时，指针的静态类型可能与被删除对象的动态类型不同，可能会删除实际指向派生类对
	象的基类类型指针。要保证运行适当的系够析构函数，基类中的析构函数必须为虚函数。
	
	
	